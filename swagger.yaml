openapi: 3.0.2
info:
  title: employeeEngagementPlatform
  version: 1.0.0
Authorization: Bearer <token>
paths:
  /users:
    post:
      tags:
        - Users
      summary: Sign up a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                passwordConfirm: string
              example:
                name: mike
                password: mike12345
                passwordConfirm: mike12345
      responses:
        '201':
          description: User created
        '401':
          description: Passwords are not the same!
        '500':
          description: Error
  /sessions:
    post:
      tags:
        - Users
      summary: Sign in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
              example:
                name: mike
                password: mike12345
      responses:
        '200':
          description: 'OK, user logged in'
        '401':
          description: Incorrect name or password
        '404':
          description: User does not exist
        '500':
          description: Error
  /hours:
    post:
      summary: Create new hours
      security:
        - bearerAuth: []
      tags: [Hours]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hours'
      responses:
        '201':
          description: hours added
        '400':
          description: if requests body does not contain required fields or required fields are invalid format
    get:
      summary: Returns list of hours
      security:
        - bearerAuth: []
      tags: [Hours]
      responses:
        200:
          description: list of the hours
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hours'
  /hours/{id}:
    patch:
      summary: Update hours
      security:
        - bearerAuth: []
      tags: [Hours]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the hour
          example: 636a228c62df96c5baaec96a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: ovject
              properties:
                userId: string
                month: string
                year: number
                days:
                  day: string
                  hours: number
            example:
              _id: 636a228c62df96c5baaec969
              userId: 6367edbf8901c69da661f0b9
              month: March
              year: 2011
              days:
                createdAt: 2022-11-08T09:23:38.336Z
                day: 25
                hours: 7
                _id: 636a228c62df96c5baaec96a
      responses:
        '201':
          description: patches hours by id
        '400':
          description: if requests body does not contain required fields or required fields are invalid format
    delete:
      summary: Deletes hours from db
      security:
        - bearerAuth: []
      tags: [Hours]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the hour that will be deleted
          example: 636a218362df96c5baaec960
      responses:
        '204':
          description: hours with given id deleted
        "401":
          description: No authorization token was found
        "500":
          description: Error
components:
  schemas:
    hours:
      title: Root Type for employees
      description: ''
      type: object
      items:
        $ref: '#/components/schemas/hours'
      example:
        userId: 6366eec1385c79a791f80ee9
        month: November
        year: 2009
        days:
          day: wednesday
          hours: 9
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
