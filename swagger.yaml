openapi: 3.0.2
info:
  title: employeeEngagementPlatform
  version: 1.0.0
paths:
  /hours:
    post:
      summary: create new hours
      tags: [Hours]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hours'
      responses:
        '201':
          description: user can add hours
  /hours:
    get:
      summary: Returns list of hours
      tags: [Hours]
      responses:
        200:
          description: list of the hours
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hours' 
/hours/{id}:
    get:
      summary: Get hours by id
      tags: [Hours]
      parameters:
        - in: path
          name: id
          schema:
           type: string
          required: true
          description: hours id
      responses:
        200:
          description: hours by id
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/hour'
components:
  schemas:
    hours:
      title: Root Type for employees
      description: ''
      type: array
      items:
        $ref: '#/components/schemas/hours'
      example:
        userId:
          - 6366eec1385c79a791f80ee9
        month: November
        year: 2009
        days:
          day: wednesday
          hours: 9
  /hours/:id:
    patch:
      responses:
        "200":
          application/json:
              schema:
                $ref: '#/components/schemas/hours'
          description: user can update hours 
  /hours/:id:
        delete:
            requestBody:
                required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/hours'
                    description: deletes hours from list
paths:
  /users/signup:
    post:
      tags:
        - users
      summary: Signup a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                  passwordConfirm: string
              example:
                name: mike
                password: mikk12345
      responses:
        "201":
          description: User created
        "403":
          description: User already exists
        "406":
          description: Email or password not acceptable
        "500":
          description: Error